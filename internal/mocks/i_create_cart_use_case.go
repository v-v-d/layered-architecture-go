// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	cart "layered-arch/internal/domain/cart"

	mock "github.com/stretchr/testify/mock"
)

// ICreateCartUseCase is an autogenerated mock type for the ICreateCartUseCase type
type ICreateCartUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: authData
func (_m *ICreateCartUseCase) Execute(authData string) (cart.Cart, error) {
	ret := _m.Called(authData)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 cart.Cart
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (cart.Cart, error)); ok {
		return rf(authData)
	}
	if rf, ok := ret.Get(0).(func(string) cart.Cart); ok {
		r0 = rf(authData)
	} else {
		r0 = ret.Get(0).(cart.Cart)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(authData)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewICreateCartUseCase creates a new instance of ICreateCartUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewICreateCartUseCase(t interface {
	mock.TestingT
	Cleanup(func())
}) *ICreateCartUseCase {
	mock := &ICreateCartUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
